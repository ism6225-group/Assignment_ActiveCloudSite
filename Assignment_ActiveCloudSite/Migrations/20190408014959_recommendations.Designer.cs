// <auto-generated />
using System;
using Assignment_ActiveCloudSite.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment_ActiveCloudSite.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20190408014959_recommendations")]
    partial class recommendations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment_ActiveCloudSite.Models.Article", b =>
                {
                    b.Property<string>("datetime")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("headline");

                    b.Property<string>("image");

                    b.Property<string>("related");

                    b.Property<string>("source");

                    b.Property<string>("summary");

                    b.Property<string>("symbol");

                    b.Property<string>("url");

                    b.HasKey("datetime");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Assignment_ActiveCloudSite.Models.Recommendation", b =>
                {
                    b.Property<string>("symbol")
                        .ValueGeneratedOnAdd();

                    b.Property<float?>("consensusEndDate");

                    b.Property<float?>("consensusStartDate");

                    b.Property<float?>("corporateActionsAppliedDate");

                    b.Property<float?>("ratingBuy");

                    b.Property<float?>("ratingHold");

                    b.Property<float?>("ratingNone");

                    b.Property<float?>("ratingOverweight");

                    b.Property<float?>("ratingScaleMark");

                    b.Property<float?>("ratingSell");

                    b.Property<float?>("ratingUnderweight");

                    b.HasKey("symbol");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("Assignment_ActiveCloudSite.Models.Symbol", b =>
                {
                    b.Property<string>("symbol")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("date");

                    b.Property<string>("iexId");

                    b.Property<bool>("isEnabled");

                    b.Property<string>("name");

                    b.Property<string>("type");

                    b.HasKey("symbol");

                    b.ToTable("Symbols");
                });
#pragma warning restore 612, 618
        }
    }
}
